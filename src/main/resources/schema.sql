CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    email VARCHAR(60) NOT NULL,
    login VARCHAR(60) NOT NULL,
    name VARCHAR(60) NOT NULL,
    birthday DATE NOT NULL);

CREATE TABLE IF NOT EXISTS friendship_status (
    friendship_status_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    status_name VARCHAR(10) NOT NULL);

CREATE TABLE IF NOT EXISTS friends (
    user_id INTEGER NOT NULL REFERENCES users(id),
    friend_id INTEGER NOT NULL REFERENCES users(id),
    friendship_status_id INTEGER NOT NULL REFERENCES friendship_status(friendship_status_id),
    PRIMARY KEY (user_id, friend_id));

CREATE TABLE IF NOT EXISTS mpa (
    mpa_id INTEGER PRIMARY KEY NOT NULL,
    mpa_name VARCHAR (60) NOT NULL,
    mpa_description VARCHAR(255) NOT NULL);

CREATE TABLE IF NOT EXISTS films (
    film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name VARCHAR(60) NOT NULL,
    description VARCHAR(200) NOT NULL,
    release_date DATE NOT NULL,
    duration LONG NOT NULL,
    mpa_id INTEGER NOT NULL REFERENCES mpa(mpa_id));

CREATE TABLE IF NOT EXISTS genre (
    genre_id INTEGER PRIMARY KEY NOT NULL,
    genre_name VARCHAR(60) NOT NULL);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id INTEGER NOT NULL REFERENCES films(film_id),
    genre_id INTEGER NOT NULL REFERENCES genre(genre_id),
    PRIMARY KEY (film_id, genre_id));

CREATE TABLE IF NOT EXISTS likes (
    film_id INTEGER NOT NULL REFERENCES films(film_id),
    user_id INTEGER NOT NULL REFERENCES users(id),
    PRIMARY KEY (film_id, user_id));